#Una empresa elabora dos tipos de bebidas utilizando zumo de piña y zumo de durazno. El dueño de la empresa ha comprado 2,340 litros de zumo de piña y 3,450 de zumo de durazno. Los litros de zumo requeridos en la fabricación de cada bebida vienen dados en la tabla siguiente.
#             Bebida 1	Bebida 2
#Zumo de piña  	  9	          5
#Zumo de durazno	3         	4
#El precio de venta de cada bebida es $430 el litro. El coste de la bebida 1 es de $250 el litro y de la bebida 2 es de $230 el litro. Se conoce que la demanda de bebidas asciende a 540 litros.

#Paso 1. Identificar las variables básicas
#X1= litros de bebida 1 a producir y vender
#X2= litros de bebida 2 a producir y vender

#Paso 2. Identificar las variables de “CJ”
#C1= 180/bebida 1
#C2= 200/ bebida 2
#Paso 3. Función objetivo
#Max z= (180/bebida1) + (200/bebida2)
#Max z= 180x1 + 200x2
#Paso 4. Identificar “BJ”
#Bi= lista máxima de zumo de piña (2380L)
#B2= Lista maxima de zumo de durazno (3850)
#B3= Demanda de bebida (850L)

#Paso 5. Identificar “AJ”
#B3= Demanda de bebidas (450)
#B3= Demanda de bebida 1(450)
#B4= Demanda de bebida 2 (450)

#Paso 6. Armar restricciones
#1x1 + 5x2 <= 2340
#3x1 + 4x2 <=3450
#X1 <= 450
#X2<= 450

#Paso 7 No negatividad
#X1, X2 >= 0

#Paso 8 Modelo general
#Max z = 180x1 + 200x2
#-9x1 +5x2 <= 2340
#-3x1 + 4x2 <= 345
#-x1 x2 <=450

# Importar la libreria
library(matlib)

# Asignar los coeficientes de las restricciones
#-9x1 +5x2 <= 2340          -9  5 (1)
#-3x1 + 4x2 <= 345          -3  4 (2)
#-x1 x2 <=450               -1  1 (3)
# Definir el número de columnas en 2 y el número de filas en 2
A<-matrix(c(-9, 5, -3, 4, -1, 1), ncol = 2, nrow = 3)

# Asignar los valores del lado derecho de las desiguldades
#-9x1 +5x2 <= 2340          2340  (1)
#-3x1 + 4x2 <= 345          345   (2)
#-x1 x2 <=450               450   (3)
b<- c(2340, 345, 450)

# Se grafican las ecuaciones
plotEqn(A, b, xlim=c(0,500), labels=TRUE)

# Intersección A
#-9x1 +5x2 <= 2340          -9  5 (1)
#-3x1 + 4x2 <= 345          -3  4 (2)
#-x1 x2 <=450               -1  1 (3)

# entonces las matrices A y B quedan como:
# [A=
#             -9     5
#             -3     4
#             -1     1  
# ;B=
#             2340
#             345
#             450
# ]

# Definiendo matricialmente las funciones dentro de R, quedaria como

A <- matrix(c(-9, 5, -3, 4, -1, 1), nrow = 3, ncol = 2, byrow = T)
A

B <- matrix(c(2340, 345, 450), nrow = 3, ncol = 1, byrow = F)
B

r <- solve(t(A)%%A)%%t(A)%*%B
r

#INTERCCECION B  restriccion 1 con el eje x2
#-9x1 +5x2 <= 2340        
# x1            =0
#
# entonces las matrices A y B quedan como:
# [A=
#             -9     5
#              1      0
# ;B=
#             2340
#             0
# ]

# Definiendo matricialmente las funciones dentro de R, quedaria como

A <- matrix(c(-9, 5, 1, 0), nrow = 2, ncol = 2, byrow = T)
A

B <- matrix(c(2340,0), nrow = 2, ncol = 1, byrow = F)
B

r <- solve(t(A)%%A)%%t(A)%*%B
r
#
#
#

#INTERCCECION C  restriccion 2 con el eje x1

#-3x1 + 4x2 <= 345         
#         x2    =0
#
# entonces las matrices A y B quedan como:
# [A=
#             -3     4
#              0      1
# ;B=
#             345
#             0
# ]

# Definiendo matricialmente las funciones dentro de R, quedaria como

A <- matrix(c(-3, 4, 0, 1), nrow = 2, ncol = 2, byrow = T)
A

B <- matrix(c(345,0), nrow = 2, ncol = 1, byrow = F)
B

r <- solve(t(A)%%A)%%t(A)%*%B
r
#
# Para ello escribe el codigo como
val<-matrix(c(-354.0393,-166.7686, 0, 468, -115, 0 ), nrow=3, ncol = 2, byrow=T)
val

FO<-matrix(c(180, 200), nrow=2, ncol=1)
# Mostrar la matriz FO
FO

r=val%*%FO
r

#
